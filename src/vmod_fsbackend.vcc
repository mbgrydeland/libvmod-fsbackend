#-
# Copyright (c) 2015 Varnish Software AS
# All rights reserved.
#
# Author: Martin Blix Grydeland <martin@varnish-software.com>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

$Module fsbackend 3 Filesystem backend vmod

DESCRIPTION
===========

`vmod_fsbackend` allows serving static files through a Varnish backend
vmod. The backend request URL is appended to the vmod's root directory
to form a filepath. If the filepath resolves to a regular file and is
readable to the Varnish child process, it is used as the source for
this backend fetch operation.

The following headers are added based on the resolved files
attributes: Last-Modified and Content-Length.

Any number of additional static headers can be added.

If the file could not be read for any reason (e.g. not found, access
restrictions or resolved outside of the root directory of the vmod),
an appropriate error response is synthesized.

$Event vmod_event

$Object root(STRING rootdir, STRING mimedb = "/etc/mime.types")

Prototype
	OBJECT vmod_fsbackend.root(STRING rootdir, STRING mimedb = "/etc/mime.types")

Description
	Creates a filesystem root. The rootdir argument is the base of the
	filesystem hierarchy.

Example::

	import fsbackend;
	sub vcl_init {
		new root = vmod_fsbackend.root("/var/www/html/");
		root.add_header("Content-Type: text/html");
	}
	sub vcl_backend_fetch {
		set bereq.backend = root.backend();
	}

$Method VOID .add_header(STRING header)

Description
	Add a static header to be present on all successful fetches through
	the backend.

Example::

	root.add_header("Cache-Control: public,max-age=86400");

$Method BACKEND .backend()

Description
	Return a backend reference to this root for use during fetch.

Example::

	set req.backend_hint = root.backend();
